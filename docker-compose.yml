services:
  web:
    build:
      context: .
      dockerfile: django-backend/build/Dockerfile
    restart: always
    volumes:
      - ./django-backend:/app
      - static_volume:/app/staticfiles
    depends_on:
      - postgres
    networks:
      - app_network
    env_file:
      - ./.env

  postgres:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - DJANGO_DB_NAME
      - DJANGO_DB_USER
      - DJANGO_DB_PASSWORD
      - CHAINLIT_DB_NAME
      - CHAINLIT_DB_USER
      - CHAINLIT_DB_PASSWORD
      - LITELLM_DB_NAME
      - LITELLM_DB_USER
      - LITELLM_DB_PASSWORD
    env_file:
      - ./.env
    ports:
      - ${DATABASE_PORT:-5432}:5432
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web
    networks:
      - app_network

  chainlit:
    build:
      context: .
      dockerfile: chainlit/build/Dockerfile
    restart: always
    volumes:
      - ./chainlit:/app
    command: ["uv", "run", "chainlit", "run", "main.py", "--host", "0.0.0.0", "--port", "8000", "-h", "-w"]
    depends_on:
      - postgres
      - web
      - nginx
      - litellm-proxy
    networks:
      - app_network
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - DJANGO_BACKEND_URL=http://nginx
      - LITELLM_PROXY_URL=http://litellm-proxy:8080

  prisma_cli:
    build:
      context: .
      dockerfile: prisma/build/Dockerfile
    container_name: prisma_cli_service
    working_dir: /app
    volumes:
      - ./prisma:/app/prisma
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    stdin_open: true
    tty: true
    command: ["tail", "-f", "/dev/null"]

  litellm-proxy:
    image: ghcr.io/berriai/litellm:main-latest
    restart: always
    volumes:
      - ./litellm-proxy/config.yaml:/app/config.yaml
      - ./litellm-proxy/costs.json:/app/costs.json
    command: --config /app/config.yaml --port 8080 --host 0.0.0.0
    networks:
      - app_network
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      - LITELLM_DB_URL=${LITELLM_DB_URL}
      - DATABASE_URL=${LITELLM_DB_URL}

networks:
  app_network:

volumes:
  postgres-data:
  static_volume: